// This sample requires Silverlight 2.
// See http://silverlight.net/GetStarted/ to install prerequisites.
// To get this the sample to work, perform the 
// following steps:
//
//      1. Create a new Silverlight Application in Visual Studio 2010
//      2. Right click on the project node in Solution Explorer
//      3. Select Add Service Reference
//      4. Enter service endpoint URL into the Address field
//         For this example, we are using the dc container and the url is http://ogdi.cloudapp.net/v1/dc
//      5. Update Page.xaml and Page.xaml.cs with the corresponding code below. 
//
// The Ogdi.DataServiceContexts sample makes it
// very easy for .NET developers to query
// for data using LINQ.  This sample is uses code 
// generation and will enable you to automatically
// generate updated classes as new data is published
// into OGDI.

// If you prefer to query the service using http, then see
//      http://msdn.microsoft.com/en-us/library/dd179456.aspx

///////////////
// Page.xaml.cs
///////////////
using System;
using System.Data.Services.Client;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace OgdiSamplesSilverlight2
{
    public partial class Page : UserControl
    {
        public Page()
        {
            InitializeComponent();
            this.Loaded += Page_Loaded;
        }

        void Page_Loaded(object sender, RoutedEventArgs e)
        {
            // NOTE: This code is an adaption of the "C#/ASP.NET" sample.  This code works
            //       for Silverlight clients.  The main difference is the asynchronous
            //       execution of the query.  Both the "C#/ASP.NET" sample and the
            //       "C#/ASP.NET Paging" sample are a bit more involved.  The idea
            //       is that you can use the more advanced techniques in those samples
            //       with Silverlight 2 as well.
                      
            var context = new Ogdi.dcDataService(new Uri("http://ogdi.cloudapp.net/v1/dc"));

            // NOTE: You can replace BankLocations with any EntitySet available
            //       See http://ogdisdk.cloudapp.net/DataCatalog.aspx
            //       for a full list.

            var query = from locations in context.BankLocations
                        select locations;

            // The query above translates into the following URL:
            //      http://ogdi.cloudapp.net/v1/dc/BankLocations()

            // Execute query...
            // All network calls in Silverlight must be asynchronous
            var dsQuery = query as DataServiceQuery<Ogdi.BankLocationsItem>;            
            dsQuery.BeginExecute(new AsyncCallback(QueryComplete), dsQuery);

            // Execute the same query, but return KML
            var wc = new System.Net.WebClient();
            var queryUrl = dsQuery.ToString() + "?format=kml";
            wc.DownloadStringCompleted += wc_DownloadStringCompleted;
            wc.DownloadStringAsync(new Uri(queryUrl));
        }

        void QueryComplete(IAsyncResult result)
        {
            var dsQuery = result.AsyncState as DataServiceQuery<Ogdi.BankLocationsItem>;
            var bankLocations = dsQuery.EndExecute(result).ToList();
            BanksDataGrid.ItemsSource = bankLocations;
        }

        void wc_DownloadStringCompleted(object sender, System.Net.DownloadStringCompletedEventArgs e)
        {
            KmlText.Text = e.Result;
        }
    }
}

///////////////
// Page.xaml
///////////////
<UserControl x:Class="OgdiSamplesSilverlight2.Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:data="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data">
    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <data:DataGrid x:Name="BanksDataGrid" Grid.Row="0">
        </data:DataGrid>
        <TextBlock x:Name="KmlText" Grid.Row="1" />
    </Grid>
</UserControl>